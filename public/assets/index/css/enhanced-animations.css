/* 第二优先级动画效果 - 增强版 */

/* 1. 媒体内容展示动画 */

/* 卡片悬停效果增强 */
.media-card {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

.media-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

.media-card:hover .card-overlay {
    opacity: 1;
    transform: translateY(0);
}

.media-card:hover .card-image {
    transform: scale(1.15);
}

.card-image {
    transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.6) 50%, transparent 100%);
    padding: 20px;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* 列表项进入动画 */
.list-item-enter {
    opacity: 0;
    transform: translateX(-30px);
    animation: listItemEnter 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes listItemEnter {
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.list-item-stagger-1 { animation-delay: 0.1s; }
.list-item-stagger-2 { animation-delay: 0.2s; }
.list-item-stagger-3 { animation-delay: 0.3s; }
.list-item-stagger-4 { animation-delay: 0.4s; }
.list-item-stagger-5 { animation-delay: 0.5s; }

/* 图片懒加载动画 */
.lazy-image {
    opacity: 0;
    transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.lazy-image.loaded {
    opacity: 1;
}

.lazy-image.loading {
    background: linear-gradient(90deg, #1a1a1a 25%, #2a2a2a 50%, #1a1a1a 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
}

/* 2. 数据可视化动画 */

/* 数字递增动画 */
.counter {
    display: inline-block;
}

.counter-animate {
    animation: countUp 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes countUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 进度条动画 */
.progress-bar-animated {
    position: relative;
    overflow: hidden;
}

.progress-bar-animated::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    animation: progressShine 2s infinite;
}

@keyframes progressShine {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

.progress-fill {
    width: 0;
    transition: width 1.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.progress-fill.animated {
    width: var(--progress-width);
}

/* 图表动画 */
.chart-bar {
    height: 0;
    transition: height 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.chart-bar.animated {
    height: var(--bar-height);
}

.chart-bar-stagger-1 { transition-delay: 0.1s; }
.chart-bar-stagger-2 { transition-delay: 0.2s; }
.chart-bar-stagger-3 { transition-delay: 0.3s; }
.chart-bar-stagger-4 { transition-delay: 0.4s; }
.chart-bar-stagger-5 { transition-delay: 0.5s; }

/* 3. 状态变化动画 */

/* 服务器状态切换 */
.status-indicator {
    position: relative;
    display: inline-block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.status-indicator.online {
    background-color: #10b981;
    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7);
    animation: statusPulse 2s infinite;
}

.status-indicator.offline {
    background-color: #ef4444;
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
    animation: statusPulse 2s infinite;
}

@keyframes statusPulse {
    0% {
        box-shadow: 0 0 0 0 currentColor;
    }
    70% {
        box-shadow: 0 0 0 10px transparent;
    }
    100% {
        box-shadow: 0 0 0 0 transparent;
    }
}

/* 通知消息动画 */
.notification-enter {
    animation: notificationSlideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.notification-exit {
    animation: notificationSlideOut 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes notificationSlideIn {
    from {
        opacity: 0;
        transform: translateX(100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes notificationSlideOut {
    from {
        opacity: 1;
        transform: translateX(0);
    }
    to {
        opacity: 0;
        transform: translateX(100%);
    }
}

/* 标签页切换效果 */
.tab-content {
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.tab-content.active {
    opacity: 1;
    transform: translateY(0);
}

.tab-button {
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.tab-button::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background: currentColor;
    transform: scaleX(0);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.tab-button.active::after {
    transform: scaleX(1);
}

/* 增强的悬停效果 */
.hover-lift {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.hover-scale {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-scale:hover {
    transform: scale(1.05);
}

/* 加载动画 */
.loading-dots {
    display: inline-flex;
    gap: 4px;
}

.loading-dots span {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: currentColor;
    animation: loadingDot 1.4s infinite ease-in-out both;
}

.loading-dots span:nth-child(1) { animation-delay: -0.32s; }
.loading-dots span:nth-child(2) { animation-delay: -0.16s; }

@keyframes loadingDot {
    0%, 80%, 100% {
        transform: scale(0);
        opacity: 0.5;
    }
    40% {
        transform: scale(1);
        opacity: 1;
    }
}

/* 响应式动画优化 */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* 深色模式优化 */
@media (prefers-color-scheme: dark) {
    .card-overlay {
        background: linear-gradient(to top, rgba(0,0,0,0.95) 0%, rgba(0,0,0,0.7) 50%, transparent 100%);
    }
    
    .progress-bar-animated::before {
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    }
}